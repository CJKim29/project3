<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.githrd.project3.dao.BookMapper">

 <resultMap id="performanceListMap" type="x_performance">
  <result property="hall_idx" column="hall_idx"/>
  <result property="performance_cate_idx" column="performance_cate_idx"/>

  <association property="performanceCateVo" column="performance_cate_idx=performance_cate_idx" select="performance_cate_list_listmap" />
  <association property="hallVo" column="hall_idx=hall_idx" select="hall_list_listmap" />
 </resultMap>

 <!-- 전체조회 -->
 <select id="selectList" resultMap="performanceListMap">
		select * from performance order by performance_idx
 </select>

 <!-- 공연별 좌석번호, 등급, 가격 조회 -->
 <select id="countSeatIdx" resultType="map">
    SELECT seat_idx, seat_grade, seat_price 
    FROM seat 
    WHERE performance_idx = #{performance_idx};
 </select>

 <!-- idx조회 -->
 <select id="selectOneFromIdx" resultMap="performanceOneMap">
		select * from performance where performance_idx=#{ performance_idx }
 </select>

 <!-- performance_date_idx 조회 -->
 <select id="selectPerformanceDateIdx" resultType="int">
        SELECT performance_date_idx 
        FROM performance_date 
        WHERE SUBSTRING(performance_date_date, 1, 10) = #{performance_date} 
        AND performance_idx = #{performance_idx};
 </select>

 <!-- 남은 좌석 수 조회 -->
 <select id="selectRemainSeat_S" resultType="int">
        SELECT 
            COALESCE(
                (SUM(A = 0) +
                SUM(B = 0) +
                SUM(C = 0) +
                SUM(D = 0) +
                SUM(E = 0) +
                SUM(F = 0) +
                SUM(G = 0) +
                SUM(H = 0) +
                SUM(I = 0) +
                SUM(J = 0)), 0) AS zero_count
        FROM s_hall
        WHERE performance_date_idx = #{performance_date_idx}
        AND seat_idx = #{seat_idx};
 </select>

 <select id="selectRemainSeat_M" resultType="int">
        select
            COALESCE(
                (SUM(A = 0) +
                SUM(B = 0) +
                SUM(C = 0) +
                SUM(D = 0) +
                SUM(E = 0) +
                SUM(F = 0) +
                SUM(G = 0) +
                SUM(H = 0) +
                SUM(I = 0) +
                SUM(J = 0) +
                SUM(K = 0) +
                SUM(L = 0) +
                SUM(M = 0) +
                SUM(N = 0) +
                SUM(O = 0)), 0) AS zero_count
        FROM m_hall
        WHERE performance_date_idx = #{performance_date_idx}
        AND seat_idx = #{seat_idx};        
 </select>

 <select id="selectRemainSeat_L" resultType="int">
        SELECT 
            COALESCE(
                (SUM(A = 0) +
                SUM(B = 0) +
                SUM(C = 0) +
                SUM(D = 0) +
                SUM(E = 0) +
                SUM(F = 0) +
                SUM(G = 0) +
                SUM(H = 0) +
                SUM(I = 0) +
                SUM(J = 0) +
                SUM(K = 0) +
                SUM(L = 0) +
                SUM(M = 0) +
                SUM(N = 0) +
                SUM(O = 0) +
                SUM(P = 0) +
                SUM(Q = 0) +
                SUM(R = 0) +
                SUM(S = 0) +
                SUM(T = 0)), 0) AS zero_count
        FROM l_hall
        WHERE performance_date_idx = #{performance_date_idx}
        AND seat_idx = #{seat_idx};
 </select>

 <select id="getPerformanceDateIdx" parameterType="map" resultType="int">
        SELECT performance_date_idx
        FROM performance_date
        WHERE performance_idx = #{performance_idx}
        AND SUBSTRING(performance_date_date, 1, 10) = #{performance_date}
 </select>


 <resultMap id="performanceOneMap" type="x_performance">
  <result property="hall_idx" column="hall_idx"/>
  <result property="performance_cate_idx" column="performance_cate_idx"/>
  <result property="performance_idx" column="performance_idx"/>
  <result property="seat_idx" column="seat_idx"/>

  <association property="performanceCateVo" column="performance_cate_idx=performance_cate_idx" select="performance_cate_list_onemap" />
  <association property="hallVo" column="hall_idx=hall_idx" select="hall_list_onemap" />
  <collection property="seatList" column="performance_idx=performance_idx" select="seat_list_onemap" />
 </resultMap>


 <select id="performance_cate_list_onemap" resultType="performance_cate">
	   select * from performance_cate where performance_cate_idx=#{ performance_cate_idx }
 </select>
 <select id="hall_list_onemap" resultType="hall">
	   select * from hall where hall_idx=#{ hall_idx }
 </select>
 <select id="seat_list_onemap" resultType="seat">
       select * from seat where performance_idx=#{ performance_idx }
 </select>
 <select id="performance_cate_list_listmap" resultType="performance_cate">
	   select * from performance_cate where performance_cate_idx=#{ performance_cate_idx }
 </select>
 <select id="hall_list_listmap" resultType="hall">
	   select * from hall where hall_idx=#{ hall_idx }
 </select>



 <!--                                        주문 결제 관련                                      -->

 <resultMap id="ordersMap" type="orders">
  <result property="order_idx" column="order_idx" />
  <!-- 좌석 정보를 담기위한 list -->
  <collection property="seatList" column="order_idx=order_idx" select="orderSeatList" />
 </resultMap>

 <!-- 회원별 주문 내역 조회(공연이미지, 공연명, 공연장명) -->
 <select id="ordersList" parameterType="int" resultMap="ordersMap">
      SELECT 
          o.cart_idx,
          p.performance_name,
          p.performance_image,
          o.reserved_performance_date,
          h.hall_name
      FROM orders o 
      INNER JOIN performance p ON o.performance_idx = p.performance_idx
      INNER JOIN hall h ON p.hall_idx = h.hall_idx
      WHERE o.mem_idx = #{mem_idx} 
      ORDER BY o.order_idx
 </select>

 <!-- 주문 좌석 정보와 좌석등급,가격 정보를 가져오기 위한 조인 -->
 <select id="orderSeatList" resultType="orders_seat">
    SELECT 
        os.cart_seat_idx,
        os.seat_idx,
        s.seat_grade,
        s.seat_price,
        os.cart_seat_name,
        os.reserved
    FROM orders_seat os 
    INNER JOIN seat s ON os.seat_idx = s.seat_idx
    WHERE os.order_idx = #{order_idx}
 </select>

 <!-- 주문 테이블에 정보 추가 -->
 <insert id="ordersInsert" parameterType="orders">
    insert into orders (performance_idx, mem_idx, reserved_performance_date, order_date)
    values (#{performance_idx}, #{mem_idx}, #{reserved_performance_date}, #{order_date});
 </insert>
 <!-- MyBatis에서 INSERT 후 자동 생성된 기본키(order_idx)를 받아오려면 @Options를 사용하여 자동 생성된 키를 매핑해야 합니다. -->
 <!-- 이렇게 하면 ordersVo 객체의 order_idx 필드에 자동 생성된 키가 저장됩니다. -->
 <!-- <insert id="ordersInsert" parameterType="orders" useGeneratedKeys="true" keyProperty="order_idx">
    insert into orders values( null,
                              #{performance_idx},
                              #{mem_idx},
                              #{reserved_performance_date},
                              #{order_date}
                            );
 </insert> -->

 <!-- 주문 좌석 -->
 <insert id="ordersSeatInsert" parameterType="orders_seat">
    insert into orders_seat values (null, #{order_idx}, #{seat_idx}, #{order_seat_name});
 </insert>

 <select id="selectOneFromOrderIdx" parameterType="int" resultType="orders">
  select * from orders where order_idx = #{order_idx};
 </select>

 <select id="selectOnePerformanceCateIdx" parameterType="int" resultType="int">
    SELECT performance_cate_idx 
    FROM performance 
    WHERE performance_idx = #{performance_idx};
 </select>

 <select id="selectOneSeatIdxM" parameterType="map" resultType="int">
        SELECT seat_idx FROM cartlistviewm where performance_idx = #{performance_idx} and m_hall_row_no = #{row};
 </select>
 <select id="selectOneSeatIdxS" parameterType="map" resultType="int">
        SELECT seat_idx FROM cartlistviews where performance_idx = #{performance_idx} and s_hall_row_no = #{row};
 </select>
 <select id="selectOneSeatIdxL" parameterType="map" resultType="int">
        SELECT seat_idx FROM cartlistviewl where performance_idx = #{performance_idx} and l_hall_row_no = #{row};
 </select>

 <select id="OrderRecentIdx" resultType="int">
        select max(order_idx) from orders
 </select>


</mapper>