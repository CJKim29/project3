<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.githrd.project3.dao.BoardMapper">

	<!-- 전체조회 -->
	<select id="board_list" resultType="board">
		select * from board order by board_ref desc, board_step asc
	</select>

	<!-- paging 별 조회 -->
	<select id="board_page_list" parameterType="Map" resultType="board">
    SELECT bb.* 
    FROM (
        SELECT
            ROW_NUMBER() OVER (ORDER BY b.board_ref DESC, b.board_step ASC) AS board_no,
            b.*,
            (SELECT COUNT(*) FROM comment_tb WHERE board_idx = b.board_idx) AS cmt_count,
            c.board_cate_name  -- 추가된 부분
        FROM
            board b
        JOIN
            board_cate c ON b.board_cate_idx = c.board_cate_idx  -- 조인 추가
																<!--<where> 태그를 사용하여 기본적인 WHERE 조건을 추가합니다. 이 태그는 자동으로 WHERE 키워드를 추가하고, 추가된 조건들이 올바르게 연결되도록 합니다.-->

		<!-- Dynamic Query: 조건별 query / <trim> 태그를 사용하여 불필요한 AND 또는 OR 문자열을 제거하고, 조건이 없는 경우 WHERE 절의 AND가 포함되지 않도록 합니다.-->
		<trim prefix="where" prefixOverrides="or">
			<!-- prefixOverrides 지정한 문자열을 제거하여 재정의 => content만을 수행할 때 where or ... 가 나오는 상황 방지 -->
			<if test="board_name != null">
                    b.board_name LIKE CONCAT('%', #{board_name}, '%')
			</if>
			<if test="mem_nickname != null">
                    or b.mem_nickname LIKE CONCAT('%', #{mem_nickname}, '%')
			</if>
		</trim>
    ) bb
    WHERE board_no BETWEEN #{start} AND #{end};
	</select>

	<!-- 전체 게시물 수 -->
	<select id="board_row_total" parameterType="Map" resultType="int">
		select ifnull(count(*),0) from board																	<!-- Dynamic Query: 조건별 query -->
		<trim prefix="where" prefixOverrides="or">			<!-- prefixOverrides 지정한 문자열을 제거하여 재정의 => content만을 수행할 때 where or ... 가 나오는 상황 방지 -->
			<if test="board_name != null">				<!-- DB에서 문자열 결합 연산 || -->
					board_name LIKE CONCAT('%', #{board_name}, '%')
			</if>
			<if test="mem_nickname != null">
					or mem_nickname LIKE CONCAT('%', #{mem_nickname}, '%')
			</if>
		</trim>

	</select>

	<!-- b_idx에 해당되는 게시물 1건 얻어오기 -->
	<select id="board_one_from_idx" parameterType="int" resultType="board">
		SELECT b.*, 
			(SELECT COUNT(*) FROM comment_tb c WHERE c.board_idx = b.board_idx) AS cmt_count
		FROM board b
		WHERE b.board_idx = #{board_idx}
	</select>

	<select id="getMaxBoard_idx" resultType="int">
        select ifnull(max(board_idx),0) from board
	</select>

	<!-- 새글쓰기 -->
	<insert id="board_insert" parameterType="board">
		insert into board values(null, 
					     #{ board_cate_idx },
					     #{ mem_idx },
					     #{ board_name },
					     #{ board_content },
					     #{ board_ip },
					     now(),
					     #{ board_readhit },
					  	 'y',
					     #{ board_ref },
					     #{ board_step },
					     #{ board_depth },
						 #{ mem_nickname }
					     )
	</insert>

	<!-- 답글쓰기 -->
	<insert id="board_reply" parameterType="board">
		insert into board values(null, 
					     #{ board_cate_idx },
					     #{ mem_idx },
					     #{ board_name },
					     #{ board_content },
					     #{ board_ip },
					     now(),
					     #{ board_readhit },
					  	 default,
					     #{ board_ref },
					     #{ board_step },
					     #{ board_depth },
						 #{ mem_nickname }
					     )
	</insert>

	<!-- 조회수 증가 -->
	<update id="board_update_readhit" parameterType="int">
		update board set board_readhit = board_readhit+1 where board_idx=#{ board_idx }
	</update>

	<!-- 같은 baseVo에서 기준글보다 step이 큰 게시물의 step을 1씩 증가: 답글작업 -->
	<update id="board_update_step" parameterType="board">
		update board set board_step = board_step + 1 
		where board_ref=#{ board_ref } and board_step > #{ board_step }
	</update>

	<!--  -->
	<update id="board_update_use">
		update board set board_use = 'n' where board_idx = #{ board_idx }
	</update>

	<update id="board_update" parameterType="board">
		update board set board_name   = #{ board_name },
					     board_content   = #{ board_content },					     
					     board_regdate 	 = now()
					     where board_idx = #{ board_idx }					     
	</update>





</mapper>
