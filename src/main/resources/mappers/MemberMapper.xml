<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.githrd.project3.dao.MemberMapper">

  <!-- 전체조회 -->
  <select id="selectList" resultType="member">
		select * from member order by mem_idx
  </select>

  <!-- idx조회 -->
  <select id="selectOneFromIdx" parameterType="int" resultType="member">
		select * from member where mem_idx=#{ mem_idx }
  </select>

  <!-- id조회 -->
  <select id="selectOneFromId" parameterType="String" resultType="member">
		select * from member where mem_id=#{ mem_id }
  </select>

  <!-- nickname조회 -->
  <select id="selectOne_nickname" parameterType="String" resultType="member">
		select * from member where mem_nickname=#{ mem_nickname }
  </select>

  <!-- phone조회 -->
  <select id="selectOne_phone" parameterType="String" resultType="member">
		select * from member where mem_phone=#{ mem_phone }
  </select>

  <!-- email조회 -->
  <select id="selectOne_email" parameterType="String" resultType="member">
		select * from member where mem_email=#{ mem_email }
  </select>

  <!-- insert -->
  <insert id="insert" parameterType="member">
        insert into member (
            mem_name,
            mem_id,
            mem_pwd,
            mem_nickname,
            mem_birth,
            mem_phone,
            mem_email,
            mem_zipcode,
            mem_addr,
            mem_ip,
            mem_filename,
            mem_point,
            mem_grade
        ) values (
            #{ mem_name },
            #{ mem_id },
            #{ mem_pwd },
            #{ mem_nickname },
            #{ mem_birth },
            #{ mem_phone },
            #{ mem_email },
            #{ mem_zipcode },
            #{ mem_addr },
            #{ mem_ip },       -- 클라이언트의 IP 주소를 받아와서 저장
            default,           -- mem_filename 기본값 사용
            default,           -- mem_point 기본값 사용 (0)
            '일반'
        )
  </insert>

  <!-- delete -->
  <delete id="delete" parameterType="int">
		delete from member where mem_idx=#{ mem_idx }
  </delete>

  <!-- update -->
  <update id="update" parameterType="member">
		update member set mem_name= #{ mem_name }, mem_pwd= #{ mem_pwd }, mem_nickname = #{ mem_nickname },
    mem_birth = #{ mem_birth }, mem_phone = #{ mem_phone }, mem_email = #{ mem_email }, mem_zipcode= #{ mem_zipcode }, mem_addr= #{ mem_addr }, mem_ip= #{ mem_ip }, mem_grade= #{ mem_grade }
							where mem_idx= #{ mem_idx }
  </update>

  <update id="updateFilename" parameterType="member">
        update member set mem_filename = #{mem_filename} where mem_idx = #{mem_idx}
  </update>
</mapper>